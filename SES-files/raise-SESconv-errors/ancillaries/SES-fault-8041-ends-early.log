Processing "/Users/ecb/Documents/GitHub/Hobyah/SES-files/raise-SESconv-errors/SES-fault-8041-ends-early.PRN".
Using SESconv.py, run at 11:15 on 26 May 2025 by ecb.
> You have chosen to set the option "-acceptwrong".
>
> The "-acceptwrong" option turns off some critical sanity checks
> and allows SES runs that are known to be wrong to be processed.
>
> The "-acceptwrong" option is intended to make things easier for
> programmers who are running modified SES code (e.g. executables
> in which SES v4.1 bugs have been fixed).
>
> Those programmers use it to check various things in modified
> versions of SES.  If you are not a programmer experienced in
> modifying the SES Fortran source code you will most likely
> regret using the "-acceptwrong" option.
>
> Please run through this thought experiment:
>
>   Are you setting the "-acceptwrong" option while hiding your
>   use of it from your boss because admitting that the SES run
>   is wrong would make you or your boss lose face?
>
> If yes, you have my sympathy.  But I still recommend that you
> do not use the "-acceptwrong" option.  Either 'fess up, or find
> some other way to move slowly from your wrong runs towards a
> sane set of design calculations (difficult, but it can be done).
>
> Ok, you have been warned.  If you are not a competent Fortran
> programmer using this option with your eyes open, then on your
> own head be it!
It looks like the run crashed reading the input.
Processing the file as far as possible.
Checking the output file for SES error messages...didn't find any SES error messages.
Processed form 1C
> *Error* type 8041 ******************************
> Ugh, ran out of lines of input to read!
>
> This usually occurs when SESconv.py tries
> to process an SES file that triggered an
> untrapped Fortran runtime error.  SES
> traps most of those, but not all.
>
> The first thing to do is check the end of
> the SES output file for clues about what
> went wrong.  Here are the last ten lines of
> the output file (possibly truncated):
>                                            INPUT VERIFICATION OF GENERAL DATA
>                                                                           ...
>                             TRAIN PERFORMANCE OPTION                      ...
>                             TEMPERATURE / HUMIDITY SIMULATION OPTION      ...
>                             HUMIDITY DISPLAY OPTION                       ...
>                             ENVIRONMENTAL CONTROL LOAD EVALUATION OPTION  ...
>                             HEAT SINK SUMMARY PRINT OPTION                ...
>                             SUPPLEMENTARY OUTPUT OPTION                   ...
>                             ALLOWABLE SIMULATION ERRORS                   ...
>                             ALLOWABLE INPUT ERRORS                        ...
>
> If those ten lines give no clues as to what
> happened, try running SES again.  But run
> it in a terminal window (not by drag and
> drop) so that you can read the output after
> the SES run ends.  Check the output to see
> see if a runtime error occurred.
> A typical runtime error looks like:
>     At line 61 of file Simq1.for
>     Fortran runtime error: Index '488670' of array...
>     Error termination. Backtrace:
>     #0  0x1026bd357
>     #1  0x1026bde17
>     #2  0x1026be1d3...
>
> Please only raise a report about a possible
> bug in SESconv.py if it looks like there was
> no Fortran runtime error.
> *Error* 8041 ******************************
> *Ugh, ran out of lines of input!  See above for details.*
Failed to process form 1D
